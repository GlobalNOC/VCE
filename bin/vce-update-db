#!/usr/bin/perl

use strict;
use warnings;

use Data::Dumper;
use DBI;

my $path = '/var/lib/vce/network_model.sqlite';
my $path2 = '/var/lib/vce/database.sqlite';
my $access_policy = '/etc/vce/access_policy.xml';
# my $path = 't/etc/nm1.sqlite.orig';
# my $path2 = 't/etc/nm5.sqlite.orig2';
# my $access_policy = 't/etc/tag_config.xml';

sub main {
    my $db = DBI->connect("dbi:SQLite:dbname=$path", undef, undef, {
        AutoCommit => 1,
        RaiseError => 1,
        sqlite_see_if_its_a_number => 1
    });

    my $query = undef;
    $query = $db->prepare(
    'CREATE TABLE IF NOT EXISTS network(
      id          INTEGER PRIMARY KEY,
      created     INTEGER,
      description TEXT,
      number      INTEGER,
      switch      TEXT,
      username    TEXT,
      uuid        TEXT,
      workgroup   TEXT,
      CONSTRAINT constraint_number UNIQUE (number),
      CONSTRAINT constraint_uuid   UNIQUE (uuid)
    )'
    );
    $query->execute();

    $query = $db->prepare(
    'CREATE TABLE IF NOT EXISTS interface(
      id            INTEGER PRIMARY KEY,
      admin_status  INTEGER,
      description   TEXT,
      hardware_type TEXT,
      mac_addr      TEXT,
      mtu           TEXT,
      name          TEXT,
      speed         TEXT,
      status        INTEGER,
      switch        TEXT
    )'
    );
    $query->execute();

    $query = $db->prepare(
    'CREATE TABLE IF NOT EXISTS vlan(
      id         INTEGER PRIMARY KEY,
      interface  TEXT,
      mode       TEXT,
      network_id INTEGER
    )'
    );
    $query->execute();

    $query = $db->prepare(
    'CREATE TABLE IF NOT EXISTS version(
      id      INTEGER PRIMARY KEY,
      version TEXT
    )'
    );
    $query->execute();

    my $version = get_version($db);
    warn "Current version: $version";

    if (!defined $version) {
        $version = upgrade_to_0_3_4($db, $version);
        warn "Version: $version";
    }

    if ($version eq '0.3.4') {
        $version = upgrade_to_0_3_5($db, $version);
        warn "Version: $version";
    }

    # NOTE:
    # All vce versions > 0.3.5 use database.sqlite. Once the version
    # reaches 0.3.6, the version number should only be incremented on
    # the new database.
    if ($version eq '0.3.5') {
        `perl /usr/bin/vce-migrate-access-policy $path $access_policy $path2`;
    }
    my $db2 = DBI->connect("dbi:SQLite:dbname=$path2", undef, undef, {
        AutoCommit => 1,
        RaiseError => 1,
        sqlite_see_if_its_a_number => 1
    });

    if ($version eq '0.3.5') {
        $version = upgrade_to_0_3_6_old($db, $version);
        $version = upgrade_to_0_3_6($db2, $version);
        warn "Version: $version";
    }
    $version = get_version($db2);

    if ($version eq '0.3.6') {
        warn 'Database update complete!';
    }

    return 1;
}

sub get_version {
    my $db = shift;

    my $query;
    eval {
        $query = $db->prepare('SELECT * FROM version');
        $query->execute;
    };
    if ($@) {
        warn "$@";
        exit 1;
    }
    my $version = $query->fetchall_arrayref({});
    return $version->[0]->{version};
}

sub upgrade_to_0_3_4 {
    my $db              = shift;
    my $current_version = shift;

    my $query = undef;

    $query = $db->prepare(
    'ALTER TABLE network RENAME TO network_tmp'
    );
    $query->execute();

    $query = $db->prepare(
    'CREATE TABLE network(
      id          INTEGER PRIMARY KEY,
      created     INTEGER,
      description TEXT,
      number      INTEGER,
      switch      TEXT,
      username    TEXT,
      uuid        TEXT,
      workgroup   TEXT,
      CONSTRAINT constraint_number UNIQUE (switch, number),
      CONSTRAINT constraint_uuid   UNIQUE (uuid)
    )'
    );
    $query->execute();

    $query = $db->prepare(
    'INSERT INTO network
     SELECT id, created, description, number, switch, username, uuid, workgroup
     FROM network_tmp'
    );
    $query->execute();

    $query = $db->prepare(
    'DROP TABLE network_tmp'
    );
    $query->execute();

    $query = $db->prepare(
    'INSERT INTO version (version) VALUES ("0.3.4")'
    );
    $query->execute();

    return "0.3.4";
}

sub upgrade_to_0_3_5 {
    my $db              = shift;
    my $current_version = shift;

    my $query = undef;

    $query = $db->prepare(
    'UPDATE version SET version="0.3.5"'
    );
    $query->execute();

    return "0.3.5";
}

sub upgrade_to_0_3_6_old {
    my $db              = shift;
    my $current_version = shift;

    my $query = undef;

    $query = $db->prepare(
    'UPDATE version SET version="0.3.6"'
    );
    $query->execute();

    return "0.3.6";
}

sub upgrade_to_0_3_6 {
    my $db              = shift;
    my $current_version = shift;

    my $query = undef;

    $query = $db->prepare(
    'INSERT INTO version (version) VALUES ("0.3.6")'
    );
    $query->execute();

    return "0.3.6";
}

main();
